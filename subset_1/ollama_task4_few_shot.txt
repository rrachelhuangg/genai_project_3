 Here's an example of how you could complete the `is_valid_email` function using a regular expression pattern:
```python
import re

def is_valid_email(email):
    pattern = r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
    return bool(re.match(pattern, email))
```
This pattern matches an email address that:

* Starts with one or more alphanumeric characters, underscores, periods, or "+" signs (the local part).
* Followed by the "@" symbol.
* Ended with a domain name consisting of one or more alphanumeric characters, underscores, periods, or hyphens (without the leading dot) followed by a period and two or more alphabetic characters (the top-level domain).
* Ends with the dollar sign at the end of the string.

Please note that this pattern is not comprehensive and does not account for various types of email address validations such as IPv6 addresses, mailboxes, etc. It's also worth noting that email validation can be very complex due to the many possible variations in email addresses. 