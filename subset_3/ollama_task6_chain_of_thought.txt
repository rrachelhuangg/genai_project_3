 To create an SQL database schema for a review app, you need to define the tables that will store your data. Here's how you can do it in three steps:

Step 1: Define the `users` table
-------------------------------

The `users` table will store information about each user who creates an account on your review app. You'll need to store their name, email, and password. The primary key for this table is usually the `user_id`, which should be unique to each user.

Here's the SQL schema for the `users` table:
```sql
CREATE TABLE users (
  user_id INT PRIMARY KEY,
  name VARCHAR(255),
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL
);
```
Step 2: Define the `books` table
----------------------------------

The `books` table will store information about each book that users can review. You'll need to store the title, author, and publication date of each book. The primary key for this table is usually the `book_id`, which should be unique to each book.

Here's the SQL schema for the `books` table:
```sql
CREATE TABLE books (
  book_id INT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  author VARCHAR(255) NOT NULL,
  publication_date DATE NOT NULL
);
```
Step 3: Define the `reviews` table
-----------------------------------

The `reviews` table will store information about each review that users submit for a book. You'll need to store the user\_id (to associate the review with a specific user), the book\_id (to associate the review with a specific book), the rating, and any comments or text that the user submitted as part of their review. The primary key for this table is usually the `review_id`, which should be unique to each review.

Here's the SQL schema for the `reviews` table:
```sql
CREATE TABLE reviews (
  review_id INT PRIMARY KEY,
  user_id INT NOT NULL,
  book_id INT NOT NULL,
  rating INT NOT NULL,
  text TEXT,
  FOREIGN KEY (user_id) REFERENCES users(user_id),
  FOREIGN KEY (book_id) REFERENCES books(book_id)
);
```
Now that you've defined your SQL database schema, you can use it to store data about your review app. You can then create queries like the one in the example at the top of this page to calculate the average rating for each book based on the reviews submitted by users. 